# -*- coding: utf-8 -*-
"""tradutorIA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18wap7TrKfrvcZ2vjszk6RIGSZk-KXSa9
"""

!pip install requests python-docx

import requests
from docx import Document
import os

subscription_key ="MPnG1ktn7YpHaAvne1XWbJdTiKQgq48VvgrTqk4r3tkFlvHnUohUJQQJ99AKAC8vTInXJ3w3AAAbACOG0Lzm"
endpoint = 'https://api.cognitive.microsofttranslator.com'
location = "westus2"
target_destination = 'pt-br'

def translator_text(texto, target_language):
    path = '/translate'
    constructed_url = endpoint + path
    headers = {
        'Ocp-Apim-Subscription-Key': subscription_key,
        'Ocp-Apim-Subscription-Region': location,
        'Content-type': 'application/json',

    }

    body = [{
        'text': texto
    }]
    params = {
        'api-version': '3.0',
        'from': 'en',
        'to': target_language
    }
    response = requests.post(constructed_url, params=params, headers=headers, json=body)

    if response.status_code != 200:
        print(f"Erro na API: {response.status_code}, Detalhes: {response.text}")
        return None

    response_json = response.json()
    try:
        return response_json[0]["translations"][0]["text"]
    except (KeyError, IndexError):
        print(f"Resposta inesperada: {response_json}")
        return None

translator_text("Oh, her eyes, her eyes", target_destination)

def translator_document(path):
    document = Document(path)
    full_text = []
    for paragraph in document.paragraphs:
          translated_text = translator_text(paragraph.text, target_destination)
          full_text.append(translated_text)

    translated_doc = Document()
    for line in full_text:
     print(line)
    translated_doc.add_paragraph(line)
    path_translated = path.replace(".docx", f"_{target_destination}.docx")
    translated_doc.save(path_translated)
    return path_translated

input_file = "/content/musica.docx"
translator_document(input_file)

